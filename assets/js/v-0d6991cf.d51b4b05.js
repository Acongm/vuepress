"use strict";(self.webpackChunkmd_vuepress=self.webpackChunkmd_vuepress||[]).push([[4018],{8656:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-0d6991cf",path:"/webpack/install/ni.html",title:"install",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"前言",slug:"前言",children:[{level:3,title:"问题",slug:"问题",children:[]}]},{level:2,title:"结构",slug:"结构",children:[]},{level:2,title:"npm",slug:"npm",children:[]},{level:2,title:"yarn",slug:"yarn",children:[]},{level:2,title:"pnpm",slug:"pnpm",children:[]},{level:2,title:"ni",slug:"ni",children:[]}],git:{updatedTime:1747665176e3},filePathRelative:"webpack/install/ni.md"}},7855:(e,n,a)=>{a.r(n),a.d(n,{default:()=>i});const s=(0,a(6252).uE)('<h1 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>从 npm 到 yarn，再到之后的 pnpm， ni 等安装工具</p><p>不断进步， 不断升级， 升级了哪些，又存在哪些问题</p><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h3><ul><li><p>嵌套安装</p><ul><li>路径过长</li><li>同一依赖， 多次安装</li></ul></li><li><p>扁平安装</p><ul><li>仅一个版本根据包的安装顺序被提升，且升级版本后，会存在新的问题（依赖提升的不确定性）</li></ul></li><li><p>npm 分身</p><ul><li>hoist 机制</li></ul></li><li><p>幽灵依赖</p><ul><li>项目未安装某个依赖，但因为安装的某个依赖中使用了该依赖， 导致可以项目中使用未安装的依赖， 但在项目升级后， 若去掉该依赖， 就会报错</li></ul><h2 id="结构" tabindex="-1"><a class="header-anchor" href="#结构" aria-hidden="true">#</a> 结构</h2></li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>node_modules\n└─ foo\n   ├─ index.js\n   ├─ package.json\n   └─ node_modules\n      └─ bar\n         ├─ index.js\n         └─ package.json\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="npm" tabindex="-1"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="yarn" tabindex="-1"><a class="header-anchor" href="#yarn" aria-hidden="true">#</a> yarn</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm" aria-hidden="true">#</a> pnpm</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">pnpm</span> i\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="ni" tabindex="-1"><a class="header-anchor" href="#ni" aria-hidden="true">#</a> ni</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ni\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',15),l={},i=(0,a(3744).Z)(l,[["render",function(e,n){return s}]])},3744:(e,n)=>{n.Z=(e,n)=>{const a=e.__vccOpts||e;for(const[e,s]of n)a[e]=s;return a}}}]);