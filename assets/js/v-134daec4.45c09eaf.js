"use strict";(self.webpackChunkmd_vuepress=self.webpackChunkmd_vuepress||[]).push([[479],{1377:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-134daec4",path:"/css/scss.html",title:"常用 SCSS 宏",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"显示省略号",slug:"显示省略号",children:[]},{level:2,title:"滚动",slug:"滚动",children:[]},{level:2,title:"垂直居中",slug:"垂直居中",children:[]}],filePathRelative:"css/scss.md",git:{updatedTime:1637512598e3}}},5767:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="常用-scss-宏" tabindex="-1"><a class="header-anchor" href="#常用-scss-宏" aria-hidden="true">#</a> 常用 SCSS 宏</h1><h2 id="显示省略号" tabindex="-1"><a class="header-anchor" href="#显示省略号" aria-hidden="true">#</a> 显示省略号</h2><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 单行省略号</span>\n<span class="token keyword">@mixin</span> <span class="token function">ellipsis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 多行省略号</span>\n<span class="token keyword">@mixin</span> <span class="token function">ellipsis-multi</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>\n  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> <span class="token variable">$line</span><span class="token punctuation">;</span>\n  <span class="token comment">/* autoprefixer: ignore next */</span>\n  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="滚动" tabindex="-1"><a class="header-anchor" href="#滚动" aria-hidden="true">#</a> 滚动</h2><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">scroll</span><span class="token punctuation">(</span><span class="token property"><span class="token variable">$type</span></span><span class="token punctuation">:</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$type</span> == &#39;x&#39; </span><span class="token punctuation">{</span>\n    <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n    <span class="token property">overflow-y</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">@else if</span> <span class="token selector"><span class="token variable">$type</span> == &#39;y&#39; </span><span class="token punctuation">{</span>\n    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">@else</span> <span class="token punctuation">{</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token property">-webkit-overflow-scrolling</span><span class="token punctuation">:</span> touch<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="垂直居中" tabindex="-1"><a class="header-anchor" href="#垂直居中" aria-hidden="true">#</a> 垂直居中</h2><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">flex-center</span><span class="token punctuation">(</span><span class="token property"><span class="token variable">$direction</span></span><span class="token punctuation">:</span> <span class="token string">&#39;row&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$direction</span> != &#39;row&#39; </span><span class="token punctuation">{</span>\n    <span class="token property">flex-direction</span><span class="token punctuation">:</span> <span class="token variable">$direction</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',7),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);